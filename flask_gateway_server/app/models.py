from app import db

class Controller(db.Model):
	id = db.Column(db.Integer, primary_key=True)
	# SLV defined controller parameters
    	controllerStrId = db.Column(db.String(64), index=True, unique=True)
	address = db.Column(db.String(64))
	Latitude = db.Column(db.Float)
	Longitude = db.Column(db.Float)
	categoryStrId = db.Column(db.Integer)
	serverMsgUrl_webapp = db.Column(db.String(256))
	reportFrequency = db.Column(db.Float)
	comment = db.Column(db.String(256))
	install_date = db.Column(db.String(32))
	InstallStatus = db.Column(db.String(32))
	network_section = db.Column(db.String(32))
	network_segmentnumber = db.Column(db.Integer)
	network_type = db.Column(db.String(32))
	networkOperationalKey = db.Column(db.String(32))
	ProductId = db.Column(db.String(32))
	providerId = db.Column(db.Integer)
	reference = db.Column(db.Integer)
	SoftwareVersion = db.Column(db.String(32))
	SystemInfo = db.Column(db.String(128))
	reportTime = db.Column(db.String(8))
	rfChannel = db.Column(db.Integer)
	SIMCardNumber = db.Column(db.String(32))
	cabinet_numberofsegment = db.Column(db.Integer)
	cabinet_type = db.Column(db.String(32))
	controller_firmwareVersion = db.Column(db.String(32))
	controller_host = db.Column(db.String(32))
	controller_model = db.Column(db.String(32))
	hardwareRevision = db.Column(db.String(32))
	RFStrength = db.Column(db.Float)
	timeZonePosix1 = db.Column(db.String(64))
	ntpHost = db.Column(db.String(64))
	sc_DNS = db.Column(db.String(64))
	sc_dnsbackup = db.Column(db.String(64))
	sc_dhcp = db.Column(db.Boolean)
	sc_mask = db.Column(db.String(256))
	sc_gateway = db.Column(db.String(256))
	
	# SLV defined controller digital inputs and poutputs
	DigitalInput1 = db.Column(db.Boolean)
	DigitalInput2 = db.Column(db.Boolean)
	DigitalOutput1 = db.Column(db.Boolean)
	DigitalOutput2 = db.Column(db.Boolean)
	ManualModeOutput1 = db.Column(db.Boolean)
	ManualModeOutput2 = db.Column(db.Boolean)
	AnalogModbus1 = db.Column(db.Float)
	AnalogModbus2 = db.Column(db.Float)
	AnalogModbus3 = db.Column(db.Float)
	AnalogModbus4 = db.Column(db.Float)
	AnalogModbus5 = db.Column(db.Float)
	AnalogModbus6 = db.Column(db.Float)
	AnalogModbus7 = db.Column(db.Float)
	AnalogModbus8 = db.Column(db.Float)
	InputModbus1 = db.Column(db.Boolean)
	InputModbus2 = db.Column(db.Boolean)
	InputModbus3 = db.Column(db.Boolean)
	InputModbus4 = db.Column(db.Boolean)
	InputModbus5 = db.Column(db.Boolean)
	InputModbus6 = db.Column(db.Boolean)
	InputModbus7 = db.Column(db.Boolean)
	InputModbus8 = db.Column(db.Boolean)
	PulseInput1 = db.Column(db.Float)
	PulseInput2 = db.Column(db.Float)
	
	# SLV defined controller failures and statuses
	DoorOpen = db.Column(db.Boolean)
	FirmwareUpdateStatus = db.Column(db.String(64))
	GatewayFailure = db.Column(db.Boolean)
	GatewayFailureMessage = db.Column(db.String(128))
	GatewayWarning = db.Column(db.Boolean)
	GatewayWarningMessage = db.Column(db.String(128))
	CommunicationFailure = db.Column(db.Boolean)
	bypassFailure_Alarm = db.Column(db.Boolean)
	manualBypass_Alrm = db.Column(db.Boolean)
	SegmentFailure1 = db.Column(db.Boolean)
	SegmentFailure2 = db.Column(db.Boolean)
	SegmentFailure3 = db.Column(db.Boolean)
	SegmentFailure4 = db.Column(db.Boolean)
	SegmentFailure5 = db.Column(db.Boolean)
	SegmentFailure6 = db.Column(db.Boolean)
	SegmentFailure7 = db.Column(db.Boolean)
	SegmentFailure8 = db.Column(db.Boolean)

	def __repr__(self):
		return '<Controller %r>' % (self.controllerStrId)




class StreetLight(db.Model):
	id = db.Column(db.Integer, primary_key=True)
	# SLV defined streetlight parameters
	idOnController = db.Column(db.String(64), index=True)
    	controllerStrId = db.Column(db.String(64), db.ForeignKey('controller.controllerStrId'))
	MacAddress = db.Column(db.String(64))
	address = db.Column(db.String(64))
	Latitude = db.Column(db.Float)
	Longitude = db.Column(db.Float)
	dimmingGroupName = db.Column(db.String(64))
	brandId = db.Column(db.Integer)
	categoryStrId = db.Column(db.Integer)
	modelFunctionId = db.Column(db.Integer)
	comment = db.Column(db.String(256))
	install_date = db.Column(db.String(32))
	InstallStatus = db.Column(db.String(32))
	network_section = db.Column(db.String(32))
	network_segmentnumber = db.Column(db.Integer)
	network_type = db.Column(db.String(32))
	power = db.Column(db.Integer)
	powerCorrection = db.Column(db.Integer)
	ProductId = db.Column(db.String(32))
	providerId = db.Column(db.Integer)
	reference = db.Column(db.Integer)
	SoftwareVersion = db.Column(db.String(32))
	SystemInfo = db.Column(db.String(128))
	pole_numberoflight = db.Column(db.Integer)
	pole_type = db.Column(db.String(32))
	ballast_brand = db.Column(db.String(32))
	ballast_type = db.Column(db.String(32))
	luminaire_brand = db.Column(db.String(32))
	luminaire_colorcode = db.Column(db.String(32))
	luminaire_function = db.Column(db.String(32))
	luminaire_model = db.Column(db.String(32))
	luminaire_status = db.Column(db.String(32))
	
	# SLV defined streetlight meetering
	LampLevel = db.Column(db.Float)
	LampSwitch = db.Column(db.Boolean)
	LampCommandLevel = db.Column(db.Float)
	LampCommandMode = db.Column(db.Integer)
	LampCommandSwitch = db.Column(db.Float)
	RunningHours = db.Column(db.Float)
	Current = db.Column(db.Float)
	LampCurrent = db.Column(db.Float)
	MainVoltage = db.Column(db.Float)
	LampVoltage = db.Column(db.Float)
	MeteredPower = db.Column(db.Float)
	LampPower = db.Column(db.Float)
	Energy = db.Column(db.Float)
	LampEnergy = db.Column(db.Float)
	LampRestartCount = db.Column(db.Integer)
	CycleCount = db.Column(db.Integer)
	BallastTemp = db.Column(db.Float)
	DryContactInput = db.Column(db.Boolean)
	PowerFactor = db.Column(db.Float)
	Temperature = db.Column(db.Float)
	Frequency = db.Column(db.Float)
	
	# SLV defined streetlight failures and statuses
	LampFailure = db.Column(db.Boolean)
	BallastCommunicationFailure = db.Column(db.Boolean)
	BallastFailure = db.Column(db.Boolean)
	CapacitorFailure = db.Column(db.Boolean)
	CommissioningFailed = db.Column(db.Boolean)
	DaliFailure = db.Column(db.Boolean)
	DefaultLostNode = db.Column(db.Boolean)
	DeviceFailure = db.Column(db.Boolean)
	ExternalComFailure = db.Column(db.Boolean)
	FlickeringFailure = db.Column(db.Boolean)
	HighCurrent = db.Column(db.Boolean)
	LowCurrent = db.Column(db.Boolean)
	HighLampCurrent = db.Column(db.Boolean)
	LowLampCurrent = db.Column(db.Boolean)
	HighVoltage = db.Column(db.Boolean)
	LowVoltage = db.Column(db.Boolean)
	HighLampVoltage = db.Column(db.Boolean)
	LowLampVoltage = db.Column(db.Boolean)
	HighPower = db.Column(db.Boolean)
	LowPower = db.Column(db.Boolean)
	LowPowerFactor = db.Column(db.Boolean)
	HighLampRunningHours = db.Column(db.Boolean)
	HighBallastTemperature = db.Column(db.Boolean)
	HighOLCTemperature = db.Column(db.Boolean)
	PhotocellStatus = db.Column(db.Boolean)
	PhotocellFailure = db.Column(db.Boolean)
	RelayFailure = db.Column(db.Boolean)
	BackupScheduler = db.Column(db.Boolean)

	# BrightLED defined streetlight meetering
	LED_temperature = db.Column(db.Float)	
	Latitude_GPS = db.Column(db.Float)
	Longitude_GPS = db.Column(db.Float)
	Angle_roll = db.Column(db.Float)
	Angle_pitch = db.Column(db.Float)
	peripherial_A = db.Column(db.Float)
	peripherial_B = db.Column(db.Float)
	air_quality_pm25 = db.Column(db.Float)
	air_quality_pm10 = db.Column(db.Float)
	humidity = db.Column(db.Float)
	outside_temp = db.Column(db.Float) 
	noise_pollution = db.Column(db.Float) 
	
	def __repr__(self):
		return '<Streetlight %r>' % (self.idOnController)


class ControlProgram(db.Model):
	id = db.Column(db.Integer, primary_key=True)
	# SLV defined control program parameters
	program_id = db.Column(db.String(32))
	command1 = db.Column(db.Integer)
    	time1 = db.Column(db.String(12))
	command2 = db.Column(db.Integer)
    	time2 = db.Column(db.String(12))
	command3 = db.Column(db.Integer)
    	time3 = db.Column(db.String(12))
	command4 = db.Column(db.Integer)
    	time4 = db.Column(db.String(12))
	command5 = db.Column(db.Integer)
    	time5 = db.Column(db.String(12))
	command6 = db.Column(db.Integer)
    	time6 = db.Column(db.String(12))
	command7 = db.Column(db.Integer)
    	time7 = db.Column(db.String(12))
	command8 = db.Column(db.Integer)
    	time8 = db.Column(db.String(12))
	command9 = db.Column(db.Integer)
    	time9 = db.Column(db.String(12))
	command10 = db.Column(db.Integer)
    	time10 = db.Column(db.String(12))
	command11 = db.Column(db.Integer)
    	time11 = db.Column(db.String(12))
	command12 = db.Column(db.Integer)
    	time12 = db.Column(db.String(12))
	command13 = db.Column(db.Integer)
    	time13 = db.Column(db.String(12))
	command14 = db.Column(db.Integer)
    	time14 = db.Column(db.String(12))
	command15 = db.Column(db.Integer)
    	time15 = db.Column(db.String(12))
